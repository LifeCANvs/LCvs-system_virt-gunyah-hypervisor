// Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

define MEMEXTENT_MAX_MAPS constant type count_t = 4;

extend cap_rights_memextent bitfield {
	0	map	bool;
	1	derive	bool;
	2	attach	bool;
	3	lookup	bool;
	4	donate	bool;
};

extend addrspace object {
	basic_mapping_list	structure list;
};

define memextent_basic_arg structure {
	me		pointer object memextent;
	map		array(MEMEXTENT_MAX_MAPS) pointer structure memextent_basic_mapping;
	failed_address	type paddr_t;
};

define memextent_basic_mapping structure {
	// RCU-protected addrspace pointer
	addrspace		pointer(atomic) object addrspace;
	mapping_list_node	structure list_node(contained);
	vbase			type vmaddr_t;
	attrs			bitfield memextent_mapping_attrs;
	retained		bool;
};

define memextent_map_ptr union(lockable) {
	basic	pointer structure memextent_basic_mapping;
};

extend memextent object {
	lock			structure spinlock;
	phys_base		type paddr_t;
	size			size;
	memtype			enumeration memextent_memtype;
	access			enumeration pgtable_access;
	children_list		structure list;
	children_list_node	structure list_node(contained);
	mappings		union memextent_map_ptr;
	active			bool;
	device_mem		bool;
	attached_address	uintptr;
	attached_size		size;
};

define memextent_clean_flags bitfield<32> {
	auto	zero	bool;
	auto	flush	bool;
};

#if defined(HYPERCALLS)
extend hyp_api_flags0 bitfield {
	delete	memextent;
	6	memextent bool = 1;
};
#endif
