// Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

define MEMDB_BITS_PER_ENTRY constant type index_t = 4;
define MEMDB_NUM_ENTRIES constant type index_t = (1 << MEMDB_BITS_PER_ENTRY);

// The GPT memdb starts all levels at a multiple of MEMDB_BITS_PER_ENTRY, so
// it has no alignment requirements.
define MEMDB_MIN_BITS constant type index_t = 0;
define MEMDB_MIN_SIZE constant size = (1 << MEMDB_MIN_BITS);

extend rcu_update_class enumeration {
	memdb_release_level;
};

define memdb_entry_info bitfield<64> {
	3:0	type enumeration memdb_type;
	11:4	shifts type count_t;
	63:12	guard uint64;
};

define memdb_entry structure {
	info	bitfield memdb_entry_info;
	next	uintptr;
};

// The aligned() directive here should be automatic.
// FIXME:
define memdb_level structure {
	level		array(MEMDB_NUM_ENTRIES) structure memdb_entry(atomic,
			aligned(sizeof(structure memdb_entry)));
	lock		structure spinlock;
	rcu_entry	structure rcu_entry(contained);
	allocator	pointer structure allocator;
};

// FIXME: remove aligned() when Issue #27 is fixed.
define memdb structure {
	root	structure memdb_entry(atomic,
		aligned(sizeof(structure memdb_entry)));
	lock	structure spinlock;
};

define memdb_op enumeration {
	INSERT = 0;
	UPDATE;
	ROLLBACK;
	LOOKUP;
	CONTIGUOUSNESS;
};

extend memdb_type enumeration {
	LEVEL;
	// FIXME:
	// Memory which may not be mapped, e.g. converted to secure memory
	PARTITION_NOMAP;
};
