// Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

module smccc

#define _SMCCC_DISPATCH_INTERFACE(type_size, iface, iface_id)			\
subscribe smccc_dispatch_ ## type_size[SMCCC_INTERFACE_ID_ ## iface_id];	\
	handler trigger_smccc_call_ ## type_size ## _ ## iface ## _event(	\
		function, is_hvc, arg1, arg2, arg3, arg4, arg5, arg6,		\
		client_id, ret0, ret1, ret2, ret3);				\
	exclude_preempt_disabled.

#define SMCCC_DISPATCH_INTERFACE(iface, iface_id) \
	_SMCCC_DISPATCH_INTERFACE(fast_32, iface, iface_id) \
	_SMCCC_DISPATCH_INTERFACE(fast_64, iface, iface_id) \
	_SMCCC_DISPATCH_INTERFACE(yielding_32, iface, iface_id) \
	_SMCCC_DISPATCH_INTERFACE(yielding_64, iface, iface_id)

SMCCC_DISPATCH_INTERFACE(arch, ARCH)
SMCCC_DISPATCH_INTERFACE(cpu, CPU)
SMCCC_DISPATCH_INTERFACE(sip, SIP)
SMCCC_DISPATCH_INTERFACE(oem, OEM)
SMCCC_DISPATCH_INTERFACE(standard, STANDARD)
SMCCC_DISPATCH_INTERFACE(standard_hyp, STANDARD_HYP)
SMCCC_DISPATCH_INTERFACE(vendor_hyp, VENDOR_HYP)

#include <smccc.ev.h>

SMCCC_ARCH_FUNCTION_32(VERSION, 0, version, ret0)
SMCCC_ARCH_FUNCTION_32(ARCH_FEATURES, 0, arch_features, arg1, ret0)
SMCCC_STANDARD_HYP_FUNCTION_32(CALL_UID, 0, std_hyp_call_uid, ret0, ret1, ret2, ret3)
SMCCC_STANDARD_HYP_FUNCTION_32(REVISION, 0, std_hyp_revision, ret0, ret1)
