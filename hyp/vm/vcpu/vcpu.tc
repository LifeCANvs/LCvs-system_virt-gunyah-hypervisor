// Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

// Reserve highest possible priority for EL2 tasks only (typically used for
// tasks that execute prior to boot)
define VCPU_MAX_PRIORITY public constant type priority_t =
	SCHEDULER_MAX_PRIORITY - 1;

define vcpu object {
};

extend thread object module vcpu {
	regs		object vcpu;
	// The option variable used for the hypercall_vcpu_configure hypercall.
	options		bitfield vcpu_option_flags(group(context_switch, x));
	flags		bitfield vcpu_runtime_flags(group(context_switch, x));
	halt_virq_src	structure virq_source(contained);
};

extend thread_kind enumeration {
	// Having THREAD_KIND_VCPU as 0 and using the correct compiler expected
	// and unexpected directives helps with optimising the context-switch
	// path and any other code that checks the thread kind against this
	// value, replacing the "cmp/b.ne" pair with a single "cbz" or "cbnz".
	vcpu = 0;
};

extend scheduler_block enumeration {
	vcpu_off;
	vcpu_suspend;
	vcpu_wfi;
	vcpu_fault;
};

extend hyp_api_flags0 bitfield {
	delete	vcpu;
	5	vcpu bool = 1;
};

extend abort_reason enumeration {
	UNHANDLED_EXCEPTION;
};

extend vcpu_virq_type enumeration {
	halt = 0;
};

extend virq_trigger enumeration {
	vcpu_halt;
};
