// Â© 2021 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

#if VIC_BASE_FORWARD_PRIVATE
// Forward private (per-CPU) HW interrupts using generic VIRQ APIs.

extend virq_trigger enumeration {
	vic_base_forward_private;
};

extend hwirq_action enumeration {
	vic_base_forward_private;
};

extend hwirq object module vic_base {
	// Pointer to an array of PPI sources, indexed by physical CPU.
	forward_private	pointer(atomic) structure vic_forward_private;
};

extend vic object {
	forward_private_lock structure spinlock;
	forward_private_list structure list;
};

extend thread object {
	forward_private_active bool;
};

extend rcu_update_class enumeration {
	vic_base_free_forward_private;
};

define vic_private_irq_info structure {
	source		structure virq_source(contained);
	irq		type irq_t;
	cpu		type cpu_index_t;
	hw_active	bool(atomic);
};

define vic_forward_private structure {
	vic		pointer object vic;
	virq		type virq_t;
	rcu_entry	structure rcu_entry(contained);
	list_node	structure list_node(contained);
	irq_info	array(PLATFORM_MAX_CORES)
				structure vic_private_irq_info;
};

#endif

#if defined(VIC_BASE_FORWARD_SHARED) && VIC_BASE_FORWARD_SHARED
// Forward shared HW interrupts using generic VIRQ APIs.

// Not needed for GICv3, so this is not implemented yet.
#error unimplemented
#endif
