// Â© 2022 Qualcomm Innovation Center, Inc. All rights reserved.
//
// SPDX-License-Identifier: BSD-3-Clause

interface smccc

#define SMCCC_DISPATCH(type, size)				\
selector_event smccc_dispatch_ ## type ## _ ## size;		\
	selector owner_id: smccc_owner_id_t;		\
	param function: smccc_function_t;			\
	param is_hvc: bool;					\
	param arg1: uint ## size ## _t;				\
	param arg2: uint ## size ## _t;				\
	param arg3: uint ## size ## _t;				\
	param arg4: uint ## size ## _t;				\
	param arg5: uint ## size ## _t;				\
	param arg6: uint ## size ## _t;				\
	param client_id: smccc_client_id_t;			\
	param ret0: uint ## size ## _t *;			\
	param ret1: uint ## size ## _t *;			\
	param ret2: uint ## size ## _t *;			\
	param ret3: uint ## size ## _t *.

SMCCC_DISPATCH(fast, 32)
SMCCC_DISPATCH(fast, 64)
SMCCC_DISPATCH(yielding, 32)
SMCCC_DISPATCH(yielding, 64)

#define _SMCCC_CALL_OWNER(type, size, owner)	\
selector_event smccc_call_ ## type ## _ ## size ## _ ## owner;	\
	selector function: smccc_function_t;			\
	param is_hvc: bool;					\
	param arg1: uint ## size ## _t;				\
	param arg2: uint ## size ## _t;				\
	param arg3: uint ## size ## _t;				\
	param arg4: uint ## size ## _t;				\
	param arg5: uint ## size ## _t;				\
	param arg6: uint ## size ## _t;				\
	param client_id: smccc_client_id_t;			\
	param ret0: uint ## size ## _t *;			\
	param ret1: uint ## size ## _t *;			\
	param ret2: uint ## size ## _t *;			\
	param ret3: uint ## size ## _t *.

#define SMCCC_CALL_OWNER(owner) \
	_SMCCC_CALL_OWNER(fast, 32, owner) \
	_SMCCC_CALL_OWNER(fast, 64, owner) \
	_SMCCC_CALL_OWNER(yielding, 32, owner) \
	_SMCCC_CALL_OWNER(yielding, 64, owner)

SMCCC_CALL_OWNER(arch)
SMCCC_CALL_OWNER(cpu)
SMCCC_CALL_OWNER(sip)
SMCCC_CALL_OWNER(oem)
SMCCC_CALL_OWNER(standard)
SMCCC_CALL_OWNER(standard_hyp)
SMCCC_CALL_OWNER(vendor_hyp)

selector_event smccc_arch_features_fast32
	selector function: smccc_arch_function_t
	return: uint32_t = SMCCC_UNKNOWN_FUNCTION32
selector_event smccc_arch_features_fast64
	selector function: smccc_arch_function_t
	return: uint32_t = SMCCC_UNKNOWN_FUNCTION32

selector_event smccc_standard_hyp_features_fast32
	selector function: smccc_standard_hyp_function_t
	return: uint32_t = SMCCC_UNKNOWN_FUNCTION32
selector_event smccc_standard_hyp_features_fast64
	selector function: smccc_standard_hyp_function_t
	return: uint32_t = SMCCC_UNKNOWN_FUNCTION32
